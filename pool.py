from layer_graph import LAYERS, Layer_graph
import matplotlib.pyplot as plt
import numpy as np
import copy
import math

class Pool(object):
    def __init__(self):
        self.models = []
        G = Layer_graph(57784)
        G.add_node(LAYERS.ip)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.fc, 128)
        G.append(LAYERS.fc, 256)
        G.append(LAYERS.fc, 512)
        G.append(LAYERS.softmax)
        G.append(LAYERS.op)
        G.update_lm()
        self.models.append((G, -math.log(0.9)))
        G = Layer_graph(92111)
        G.add_node(LAYERS.ip)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.fc, 128)
        G.append(LAYERS.fc, 256)
        G.append(LAYERS.fc, 512)
        G.append(LAYERS.softmax)
        G.append(LAYERS.op)
        G.update_lm()
        self.models.append((G, -math.log(0.9)))
        G = Layer_graph(126517)
        G.add_node(LAYERS.ip)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.fc, 128)
        G.append(LAYERS.fc, 256)
        G.append(LAYERS.fc, 512)
        G.append(LAYERS.softmax)
        G.append(LAYERS.op)
        G.update_lm()
        self.models.append((G, -math.log(0.9)))
        G = Layer_graph(57735)
        G.add_node(LAYERS.ip)
        G.append(LAYERS.conv7, 64)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 64) #conv 3 / 2
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 128) #conv 3 / 2
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 256) #conv 3 / 2
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 512) #conv 3 / 2
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.avgpool)
        G.append(LAYERS.fc, 1024)
        G.append(LAYERS.softmax)
        G.append(LAYERS.op)
        G.update_lm()
        self.models.append((G, -math.log(0.9)))
        G = Layer_graph(92551)
        G.add_node(LAYERS.ip)
        G.append(LAYERS.conv7, 64)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 64) #conv 3 / 2
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 128) #conv 3 / 2
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 256) #conv 3 / 2
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 512) #conv 3 / 2
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.avgpool)
        G.append(LAYERS.fc, 1024)
        G.append(LAYERS.softmax)
        G.append(LAYERS.op)
        G.update_lm()
        self.models.append((G, -math.log(0.9)))
        G = Layer_graph(31659)
        G.add_node(LAYERS.ip)
        G.append(LAYERS.conv7, 64)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 64) #conv 3 / 2
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 128) #conv 3 / 2
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 256) #conv 3 / 2
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.avgpool)
        G.append(LAYERS.fc, 512)
        G.append(LAYERS.softmax)
        G.append(LAYERS.op)
        G.update_lm()
        self.models.append((G, -math.log(0.9)))
        G = Layer_graph(127367)
        G.add_node(LAYERS.ip)
        G.append(LAYERS.conv7, 64)
        G.append(LAYERS.maxpool)
        G.append(LAYERS.conv3, 64) #conv 3 / 2
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 64)
        G.append(LAYERS.conv3, 128) #conv 3 / 2
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 128)
        G.append(LAYERS.conv3, 256) #conv 3 / 2
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 256)
        G.append(LAYERS.conv3, 512) #conv 3 / 2
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.conv3, 512)
        G.append(LAYERS.avgpool)
        G.append(LAYERS.fc, 1024)
        G.append(LAYERS.softmax)
        G.append(LAYERS.op)
        G.update_lm()
        self.models.append((G, -math.log(0.9)))
        print(len(self.models))

    def get_layer_graph(self, graph_idx):
        return self.models[graph_idx][0]

    def get_layer_graph_acc(self, graph_idx):
        return self.models[graph_idx][1]

    def mutate_layer_graph(self, graph_idx):
        mut_graph = copy.deepcopy(self.get_layer_graph(graph_idx))
        mut_graph.mutate()
        self.models.append((mut_graph, None))



if __name__ == '__main__':
    P = Pool()
    P.mutate_layer_graph(0)
    mut_pool = copy.deepcopy(P.get_layer_graph(7))
    mut_pool.show_graph()
    plt.show()
